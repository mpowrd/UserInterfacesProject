{"ast":null,"code":"var _jsxFileName = \"C:\\\\GITHUB PROJECTS\\\\MDS\\\\UserInterfacesProject\\\\Eurodle (la buena)\\\\eurodle\\\\src\\\\guessSong\\\\ClueDisplay.js\";\nimport React from 'react';\n\n// Podrías tener componentes específicos para Audio/Video si son complejos\n\n// import AudioPlayer from './AudioPlayer';\n\n// import VideoPlayer from './VideoPlayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ClueDisplay({\n  songData,\n  revealedClues,\n  gameStatus\n}) {\n  // Helper para no repetir la condición\n\n  const isClueRevealed = clueNumber => revealedClues.includes(clueNumber);\n\n  // Muestra todas las pistas si el juego terminó (opcional)\n\n  const showAll = gameStatus === 'lost' || gameStatus === 'won';\n\n  // Función para generar el contenido de cada pista\n\n  const getClueContent = clueNumber => {\n    var _songData$enlaceActua;\n    switch (clueNumber) {\n      case 1:\n        return `Letra: \"${songData.letra.substring(0, 30)}...\"`;\n      // Muestra un trozo\n\n      case 2:\n        return `Quedó ${songData.puesto}º (Entre ${songData.paisArriba} y ${songData.paisDebajo})`;\n      case 3:\n        // Asegúrate que enlaceAudio sea un fragmento corto y reproducible directamente\n\n        // Idealmente usar <AudioPlayer src={songData.enlaceAudio} /> si tienes un componente custom\n\n        return songData.enlaceAudio ? /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          src: songData.enlaceAudio,\n          style: {\n            maxWidth: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: songData.enlaceAudio,\n            children: \"Escuchar audio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 115\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 45\n        }, this) : 'Audio no disponible';\n      case 4:\n        // Usa el enlace de \"embed\" de YouTube para iframes\n\n        const embedUrl = (_songData$enlaceActua = songData.enlaceActuacion) === null || _songData$enlaceActua === void 0 ? void 0 : _songData$enlaceActua.replace(\"watch?v=\", \"embed/\");\n\n        // Idealmente usar <VideoPlayer src={embedUrl} />\n\n        return embedUrl ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n          width: \"100%\",\n          height: \"150\",\n          src: embedUrl,\n          title: \"YouTube video player\",\n          frameBorder: \"0\",\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n          allowFullScreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 33\n        }, this) : 'Video no disponible';\n      case 5:\n        return `Cantante: ${songData.cantante}`;\n      case 6:\n        const firstLetter = songData.nombre.charAt(0);\n        const lastLetter = songData.nombre.charAt(songData.nombre.length - 1);\n        return `Título empieza por '${firstLetter}' y acaba por '${lastLetter}'`;\n      case 7:\n        // Revelar año o país aleatoriamente\n\n        const revealYear = Math.random() < 0.5;\n        return revealYear ? `Año: ${songData.anyo}` : `País: ${songData.pais}`;\n      default:\n        return null;\n      // No debería pasar\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clues-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pistas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"clue-list\",\n      children: [1, 2, 3, 4, 5, 6, 7].map(clueNum => isClueRevealed(clueNum) || showAll ?\n      /*#__PURE__*/\n      // Muestra si está revelada O si el juego terminó\n      _jsxDEV(\"li\", {\n        className: \"clue-item revealed\",\n        children: [\"informacion de la pista \", clueNum, \":\", songData === undefined || songData === null || songData === \"\" ? \" nada que mostrar\" : getClueContent(clueNum)]\n      }, clueNum, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"clue-item hidden\",\n        children: [\"Pista \", clueNum, \" (Bloqueada)\"]\n      }, clueNum, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_c = ClueDisplay;\nexport default ClueDisplay;\nvar _c;\n$RefreshReg$(_c, \"ClueDisplay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ClueDisplay","songData","revealedClues","gameStatus","isClueRevealed","clueNumber","includes","showAll","getClueContent","_songData$enlaceActua","letra","substring","puesto","paisArriba","paisDebajo","enlaceAudio","controls","src","style","maxWidth","children","href","fileName","_jsxFileName","lineNumber","columnNumber","embedUrl","enlaceActuacion","replace","width","height","title","frameBorder","allow","allowFullScreen","cantante","firstLetter","nombre","charAt","lastLetter","length","revealYear","Math","random","anyo","pais","className","map","clueNum","undefined","_c","$RefreshReg$"],"sources":["C:/GITHUB PROJECTS/MDS/UserInterfacesProject/Eurodle (la buena)/eurodle/src/guessSong/ClueDisplay.js"],"sourcesContent":["import React from 'react';\r\n\r\n// Podrías tener componentes específicos para Audio/Video si son complejos\r\n\r\n// import AudioPlayer from './AudioPlayer';\r\n\r\n// import VideoPlayer from './VideoPlayer';\r\n\r\nfunction ClueDisplay({ songData, revealedClues, gameStatus }) {\r\n\r\n  // Helper para no repetir la condición\r\n\r\n  const isClueRevealed = (clueNumber) => revealedClues.includes(clueNumber);\r\n\r\n  // Muestra todas las pistas si el juego terminó (opcional)\r\n\r\n  const showAll = gameStatus === 'lost' || gameStatus === 'won';\r\n\r\n  // Función para generar el contenido de cada pista\r\n\r\n  const getClueContent = (clueNumber) => {\r\n\r\n      switch (clueNumber) {\r\n\r\n          case 1:\r\n\r\n              return `Letra: \"${songData.letra.substring(0, 30)}...\"`; // Muestra un trozo\r\n\r\n          case 2:\r\n\r\n              return `Quedó ${songData.puesto}º (Entre ${songData.paisArriba} y ${songData.paisDebajo})`;\r\n\r\n          case 3:\r\n\r\n               // Asegúrate que enlaceAudio sea un fragmento corto y reproducible directamente\r\n\r\n               // Idealmente usar <AudioPlayer src={songData.enlaceAudio} /> si tienes un componente custom\r\n\r\n              return songData.enlaceAudio ? <audio controls src={songData.enlaceAudio} style={{maxWidth: '100%'}}><a href={songData.enlaceAudio}>Escuchar audio</a></audio> : 'Audio no disponible';\r\n\r\n          case 4:\r\n\r\n              // Usa el enlace de \"embed\" de YouTube para iframes\r\n\r\n              const embedUrl = songData.enlaceActuacion?.replace(\"watch?v=\", \"embed/\");\r\n\r\n              // Idealmente usar <VideoPlayer src={embedUrl} />\r\n\r\n              return embedUrl ? <iframe width=\"100%\" height=\"150\" src={embedUrl} title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe> : 'Video no disponible';\r\n\r\n          case 5:\r\n\r\n              return `Cantante: ${songData.cantante}`;\r\n\r\n          case 6:\r\n\r\n              const firstLetter = songData.nombre.charAt(0);\r\n\r\n              const lastLetter = songData.nombre.charAt(songData.nombre.length - 1);\r\n\r\n              return `Título empieza por '${firstLetter}' y acaba por '${lastLetter}'`;\r\n\r\n          case 7:\r\n\r\n              // Revelar año o país aleatoriamente\r\n\r\n              const revealYear = Math.random() < 0.5;\r\n\r\n              return revealYear ? `Año: ${songData.anyo}` : `País: ${songData.pais}`;\r\n\r\n          default:\r\n\r\n              return null; // No debería pasar\r\n\r\n      }\r\n\r\n  };\r\n\r\n  return (\r\n\r\n    <div className=\"clues-section\">\r\n\r\n      <h2>Pistas</h2>\r\n\r\n      <ul className=\"clue-list\">\r\n\r\n        {[1, 2, 3, 4, 5, 6, 7].map(clueNum => (\r\n\r\n          (isClueRevealed(clueNum) || showAll) ? // Muestra si está revelada O si el juego terminó\r\n\r\n            <li key={clueNum} className=\"clue-item revealed\">\r\n\r\n              informacion de la pista {clueNum}:  \r\n              {songData === undefined || songData === null || songData === \"\" \r\n                ? \" nada que mostrar\" : getClueContent(clueNum)}\r\n\r\n            </li>\r\n\r\n           :\r\n\r\n            <li key={clueNum} className=\"clue-item hidden\">\r\n\r\n              Pista {clueNum} (Bloqueada)\r\n\r\n            </li>\r\n\r\n        ))}\r\n\r\n      </ul>\r\n\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default ClueDisplay;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}