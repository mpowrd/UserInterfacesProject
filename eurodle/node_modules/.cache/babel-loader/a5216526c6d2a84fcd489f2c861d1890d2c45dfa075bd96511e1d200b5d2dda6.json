{"ast":null,"code":"var _jsxFileName = \"C:\\\\GITHUB PROJECTS\\\\UserInterfacesProject\\\\eurodle\\\\src\\\\GuessSingerCountry\\\\GuessSingerCountry.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport MapPaths from \"../assets/MapPaths\";\nimport \"./GuessSingerCountry.css\";\nimport Papa from \"papaparse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InteractiveMap = () => {\n  _s();\n  const [canciones, setCanciones] = useState([]);\n  const [cancionSelect, setCancionSelect] = useState(null);\n  const [countrySelected, setCountrySelected] = useState(null);\n  const [resultadoMensaje, setResultadoMensaje] = useState(\"Pista: \");\n\n  // Estados para almacenar el país seleccionado\n  const [hoveredCountry, setHoveredCountry] = useState(null);\n  useEffect(() => {\n    // Cargamos las caciones del csv al iniciar\n    Papa.parse(\"/canciones.csv\", {\n      header: true,\n      download: true,\n      complete: results => {\n        /*\r\n        Vamos a filtrar la cancion por el atributo song_name asegurandonos que\r\n        todos los campos clave existan y no estén vacíos.\r\n         */\n        const listaCanciones = results.data.filter(c => c.artist_name && c.artist_name.trim() !== \"\" && c.country && c.country.trim() !== \"\");\n        setCanciones(listaCanciones);\n\n        // Elegimos una canción aleatoria solo entre las válidas. Esta será la canción a adivinar\n        const randomIndex = Math.floor(Math.random() * listaCanciones.length);\n        const cancionSeleccionada = listaCanciones[randomIndex];\n\n        // const cancionArriba = results.data.filter(c =>\n        //     c.final_place && parseInt(c.final_place.trim()) === parseInt(cancionSeleccionada.final_place) - 1 &&\n        //     c.year && parseInt(c.year.trim()) === parseInt(cancionSeleccionada.year)\n        // );\n        //\n        // const cancionAbajo = results.data.filter(c =>\n        //     c.final_place && parseInt(c.final_place.trim()) === parseInt(cancionSeleccionada.final_place) + 1 &&\n        //     c.year && parseInt(c.year.trim()) === parseInt(cancionSeleccionada.year)\n        // );\n        //\n        // cancionSeleccionada.paisArriba = cancionArriba.length === 0 ? \"Desconocido\" : cancionArriba[0].country;\n        // cancionSeleccionada.paisAbajo = cancionAbajo.length === 0 ? \"Desconocido\" : cancionAbajo[0].country;\n\n        setCancionSelect(cancionSeleccionada);\n      },\n      error: error => {\n        console.error(\"Error al cargar el CSV:\", error);\n      }\n    });\n  }, []);\n  const handleMouseEnter = event => {\n    const country = event.target;\n    setHoveredCountry(country.getAttribute(\"name\"));\n    country.setAttribute(\"stroke\", \"#ffcc00\"); // Color del borde resaltado\n    country.setAttribute(\"stroke-width\", \"2\"); // Grosor del borde resaltado\n  };\n  const handleMouseLeave = event => {\n    const country = event.target;\n    setHoveredCountry(null);\n    country.setAttribute(\"stroke\", \"black\"); // Restaurar borde original\n    country.setAttribute(\"stroke-width\", \"1\");\n  };\n  const cantanteAdivinar = {\n    nameCantante: cancionSelect === null || cancionSelect === void 0 ? void 0 : cancionSelect.artist_name,\n    nameCountry: cancionSelect === null || cancionSelect === void 0 ? void 0 : cancionSelect.country\n  };\n  function getCentroid(path) {\n    const bbox = path.getBBox();\n    return {\n      x: bbox.x + bbox.width / 2,\n      y: bbox.y + bbox.height / 2\n    };\n  }\n  function getDirectionWithArrow(from, to) {\n    const dx = to.x - from.x;\n    const dy = to.y - from.y;\n    const angle = Math.atan2(dy, dx) * 180 / Math.PI;\n    const adjusted = (angle + 360) % 360;\n    if (adjusted >= 337.5 || adjusted < 22.5) return {\n      dir: \"Este\",\n      arrow: \"➡️\"\n    };\n    if (adjusted < 67.5) return {\n      dir: \"Sureste\",\n      arrow: \"↘️\"\n    };\n    if (adjusted < 112.5) return {\n      dir: \"Sur\",\n      arrow: \"⬇️\"\n    };\n    if (adjusted < 157.5) return {\n      dir: \"Suroeste\",\n      arrow: \"↙️\"\n    };\n    if (adjusted < 202.5) return {\n      dir: \"Oeste\",\n      arrow: \"⬅️\"\n    };\n    if (adjusted < 247.5) return {\n      dir: \"Noroeste\",\n      arrow: \"↖️\"\n    };\n    if (adjusted < 292.5) return {\n      dir: \"Norte\",\n      arrow: \"⬆️\"\n    };\n    if (adjusted < 337.5) return {\n      dir: \"Noreste\",\n      arrow: \"↗️\"\n    };\n  }\n  const getIdByName = name => {\n    const element = document.querySelector(`path[name=\"${name}\"]`);\n    return element ? element.id : null;\n  };\n  function compararPaises(paisSeleccionado, paisAdivinar) {\n    const idSeleccionado = getIdByName(paisSeleccionado);\n    const idAdivinar = getIdByName(paisAdivinar);\n    const paisSelected = document.getElementById(idSeleccionado);\n    const paisAdivin = document.getElementById(idAdivinar);\n    console.log(\"ID seleccionado:\", idSeleccionado);\n    console.log(\"ID a adivinar:\", idAdivinar);\n    if (!paisSelected || !paisAdivin) {\n      console.warn(\"Países no encontrados\");\n      return;\n    }\n\n    //const paisSelected = paisesList[0].path;\n    //const paisAdivin = adivinarList[0].path;\n\n    const centroDesde = getCentroid(paisSelected);\n    const centroHasta = getCentroid(paisAdivin);\n    const {\n      dir,\n      arrow\n    } = getDirectionWithArrow(centroDesde, centroHasta);\n    const mensaje = `Pista: ${arrow}`;\n    setResultadoMensaje(mensaje);\n  }\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const handleCountryClick = event => {\n    const countrySelectedID = event.target.getAttribute(\"id\");\n    const countrySelectedName = document.getElementById(countrySelectedID).getAttribute(\"name\");\n    setSelectedCountry(countrySelectedName);\n    paisAdivinado(countrySelectedName);\n  };\n  function paisAdivinado(countrySelectedName) {\n    if (countrySelectedName === cantanteAdivinar.nameCountry) {\n      setResultadoMensaje(\"¡Correcto! Has adivinado el país.\");\n    } else {\n      compararPaises(countrySelectedName, cantanteAdivinar.nameCountry);\n    }\n  }\n  const reiniciarJuego = () => {\n    // Resetear todo\n    const randomIndex = Math.floor(Math.random() * canciones.length);\n    setCancionSelect(canciones[randomIndex]);\n    setResultadoMensaje(\"Pista: \");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"ADIVINA EL PAIS DEL CANTANTE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        width: '100%',\n        gap: '20px',\n        margin: '20px 0',\n        padding: '15px',\n        borderRadius: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: '1 1 300px',\n          minWidth: '0',\n          fontSize: 'clamp(12px, 2vw, 16px)',\n          lineHeight: '1.5'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Cantante: \", cantanteAdivinar.nameCantante]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Pa\\xEDs seleccionado: \", hoveredCountry]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), cantanteAdivinar && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Has hecho click en: \", selectedCountry]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"10px\",\n            fontSize: \"25px\",\n            fontWeight: \"bold\"\n          },\n          children: resultadoMensaje\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: reiniciarJuego,\n          style: {\n            marginTop: \"20px\"\n          },\n          children: \"Reiniciar Juego\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: '0 0 300px',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'flex-start'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"800\",\n          height: \"446\",\n          viewBox: \"0 0 800 446\" // Ajusta según el tamaño del mapa\n          ,\n          xmlns: \"http://www.w3.org/2000/svg\",\n          children: /*#__PURE__*/_jsxDEV(MapPaths, {\n            handleMouseEnter: handleMouseEnter,\n            handleMouseLeave: handleMouseLeave,\n            handleCountryClick: handleCountryClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 9\n  }, this);\n};\n_s(InteractiveMap, \"I+XCXy+EspvVsXkAOQ5CSvD755U=\");\n_c = InteractiveMap;\nexport default InteractiveMap;\nvar _c;\n$RefreshReg$(_c, \"InteractiveMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","MapPaths","Papa","jsxDEV","_jsxDEV","InteractiveMap","_s","canciones","setCanciones","cancionSelect","setCancionSelect","countrySelected","setCountrySelected","resultadoMensaje","setResultadoMensaje","hoveredCountry","setHoveredCountry","parse","header","download","complete","results","listaCanciones","data","filter","c","artist_name","trim","country","randomIndex","Math","floor","random","length","cancionSeleccionada","error","console","handleMouseEnter","event","target","getAttribute","setAttribute","handleMouseLeave","cantanteAdivinar","nameCantante","nameCountry","getCentroid","path","bbox","getBBox","x","width","y","height","getDirectionWithArrow","from","to","dx","dy","angle","atan2","PI","adjusted","dir","arrow","getIdByName","name","element","document","querySelector","id","compararPaises","paisSeleccionado","paisAdivinar","idSeleccionado","idAdivinar","paisSelected","getElementById","paisAdivin","log","warn","centroDesde","centroHasta","mensaje","selectedCountry","setSelectedCountry","handleCountryClick","countrySelectedID","countrySelectedName","paisAdivinado","reiniciarJuego","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexWrap","gap","margin","padding","borderRadius","flex","minWidth","fontSize","lineHeight","marginTop","fontWeight","onClick","justifyContent","alignItems","viewBox","xmlns","_c","$RefreshReg$"],"sources":["C:/GITHUB PROJECTS/UserInterfacesProject/eurodle/src/GuessSingerCountry/GuessSingerCountry.js"],"sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\r\nimport MapPaths from \"../assets/MapPaths\";\r\nimport \"./GuessSingerCountry.css\"\r\nimport Papa from \"papaparse\";\r\n\r\nconst InteractiveMap = () => {\r\n\r\n    const [canciones, setCanciones] = useState([]);\r\n\r\n    const [cancionSelect, setCancionSelect] = useState(null);\r\n\r\n    const [countrySelected, setCountrySelected] = useState(null);\r\n\r\n    const [resultadoMensaje, setResultadoMensaje] = useState(\"Pista: \");\r\n\r\n    // Estados para almacenar el país seleccionado\r\n    const [hoveredCountry, setHoveredCountry] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Cargamos las caciones del csv al iniciar\r\n        Papa.parse(\"/canciones.csv\", {\r\n            header: true,\r\n            download: true,\r\n            complete: (results) => {\r\n                /*\r\n                Vamos a filtrar la cancion por el atributo song_name asegurandonos que\r\n                todos los campos clave existan y no estén vacíos.\r\n                 */\r\n                const listaCanciones = results.data.filter(c =>\r\n                    c.artist_name && c.artist_name.trim() !== \"\" &&\r\n                    c.country && c.country.trim() !== \"\"\r\n                );\r\n\r\n                setCanciones(listaCanciones);\r\n\r\n                // Elegimos una canción aleatoria solo entre las válidas. Esta será la canción a adivinar\r\n                const randomIndex = Math.floor(Math.random() * listaCanciones.length);\r\n                const cancionSeleccionada = listaCanciones[randomIndex];\r\n\r\n                // const cancionArriba = results.data.filter(c =>\r\n                //     c.final_place && parseInt(c.final_place.trim()) === parseInt(cancionSeleccionada.final_place) - 1 &&\r\n                //     c.year && parseInt(c.year.trim()) === parseInt(cancionSeleccionada.year)\r\n                // );\r\n                //\r\n                // const cancionAbajo = results.data.filter(c =>\r\n                //     c.final_place && parseInt(c.final_place.trim()) === parseInt(cancionSeleccionada.final_place) + 1 &&\r\n                //     c.year && parseInt(c.year.trim()) === parseInt(cancionSeleccionada.year)\r\n                // );\r\n                //\r\n                // cancionSeleccionada.paisArriba = cancionArriba.length === 0 ? \"Desconocido\" : cancionArriba[0].country;\r\n                // cancionSeleccionada.paisAbajo = cancionAbajo.length === 0 ? \"Desconocido\" : cancionAbajo[0].country;\r\n\r\n                setCancionSelect(cancionSeleccionada);\r\n            },\r\n            error: (error) => {\r\n                console.error(\"Error al cargar el CSV:\", error);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n\r\n\r\n    const handleMouseEnter = (event) => {\r\n        const country = event.target;\r\n        setHoveredCountry(country.getAttribute(\"name\"));\r\n        country.setAttribute(\"stroke\", \"#ffcc00\"); // Color del borde resaltado\r\n        country.setAttribute(\"stroke-width\", \"2\"); // Grosor del borde resaltado\r\n    }; \r\n\r\n    const handleMouseLeave = (event) => {\r\n        const country = event.target;\r\n        setHoveredCountry(null);\r\n        country.setAttribute(\"stroke\", \"black\"); // Restaurar borde original\r\n        country.setAttribute(\"stroke-width\", \"1\");\r\n    };\r\n\r\n    const cantanteAdivinar= {\r\n        nameCantante: cancionSelect?.artist_name,\r\n        nameCountry: cancionSelect?.country,\r\n    }\r\n\r\n\r\n\r\n    function getCentroid(path) {\r\n        const bbox = path.getBBox();\r\n        return {\r\n            x: bbox.x + bbox.width / 2,\r\n            y: bbox.y + bbox.height / 2,\r\n        };\r\n    }\r\n\r\n    function getDirectionWithArrow(from, to) {\r\n        const dx = to.x - from.x;\r\n        const dy = to.y - from.y;\r\n        const angle = (Math.atan2(dy, dx) * 180) / Math.PI;\r\n        const adjusted = (angle + 360) % 360;\r\n\r\n        if (adjusted >= 337.5 || adjusted < 22.5) return {dir: \"Este\", arrow: \"➡️\"};\r\n        if (adjusted < 67.5) return {dir: \"Sureste\", arrow: \"↘️\"};\r\n        if (adjusted < 112.5) return {dir: \"Sur\", arrow: \"⬇️\"};\r\n        if (adjusted < 157.5) return {dir: \"Suroeste\", arrow: \"↙️\"};\r\n        if (adjusted < 202.5) return {dir: \"Oeste\", arrow: \"⬅️\"};\r\n        if (adjusted < 247.5) return {dir: \"Noroeste\", arrow: \"↖️\"};\r\n        if (adjusted < 292.5) return {dir: \"Norte\", arrow: \"⬆️\"};\r\n        if (adjusted < 337.5) return {dir: \"Noreste\", arrow: \"↗️\"};\r\n    }\r\n\r\n    const getIdByName = (name) => {\r\n        const element = document.querySelector(`path[name=\"${name}\"]`);\r\n        return element ? element.id : null;\r\n    };\r\n\r\n    function compararPaises(paisSeleccionado, paisAdivinar) {\r\n        const idSeleccionado = getIdByName(paisSeleccionado);\r\n        const idAdivinar = getIdByName(paisAdivinar);\r\n\r\n        const paisSelected = document.getElementById(idSeleccionado);\r\n        const paisAdivin = document.getElementById(idAdivinar);\r\n\r\n        console.log(\"ID seleccionado:\", idSeleccionado);\r\n        console.log(\"ID a adivinar:\", idAdivinar);\r\n\r\n        if (!paisSelected || !paisAdivin) {\r\n            console.warn(\"Países no encontrados\");\r\n            return;\r\n        }\r\n\r\n        //const paisSelected = paisesList[0].path;\r\n        //const paisAdivin = adivinarList[0].path;\r\n\r\n        const centroDesde = getCentroid(paisSelected);\r\n        const centroHasta = getCentroid(paisAdivin);\r\n        const {dir, arrow} = getDirectionWithArrow(centroDesde, centroHasta);\r\n\r\n        const mensaje = `Pista: ${arrow}`;\r\n\r\n        setResultadoMensaje(mensaje);\r\n    }\r\n\r\n\r\n\r\n    const [selectedCountry,setSelectedCountry] = useState(null);\r\n\r\n    const handleCountryClick = (event) => {\r\n        const countrySelectedID = event.target.getAttribute(\"id\");\r\n        const countrySelectedName = document.getElementById(countrySelectedID).getAttribute(\"name\");\r\n        setSelectedCountry(countrySelectedName);\r\n\r\n        paisAdivinado(countrySelectedName);\r\n    };\r\n\r\n    function paisAdivinado(countrySelectedName) {\r\n        if (countrySelectedName === cantanteAdivinar.nameCountry) {\r\n            setResultadoMensaje(\"¡Correcto! Has adivinado el país.\");\r\n        } else {\r\n            compararPaises(countrySelectedName, cantanteAdivinar.nameCountry);\r\n        }\r\n    }\r\n\r\n    const reiniciarJuego = () => {\r\n        // Resetear todo\r\n        const randomIndex = Math.floor(Math.random() * canciones.length);\r\n        setCancionSelect(canciones[randomIndex]);\r\n        setResultadoMensaje(\"Pista: \");\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>ADIVINA EL PAIS DEL CANTANTE</h2>\r\n\r\n            <div style={{\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                width: '100%',\r\n                gap: '20px',\r\n                margin: '20px 0',\r\n                padding: '15px',\r\n                borderRadius: '8px'\r\n            }}>\r\n                <div style={{\r\n                    flex: '1 1 300px',\r\n                    minWidth: '0',\r\n                    fontSize: 'clamp(12px, 2vw, 16px)',\r\n                    lineHeight: '1.5'\r\n                }}>\r\n                    <h3>Cantante: {cantanteAdivinar.nameCantante}</h3>\r\n                    {/*<h3>{cantanteAdivinar.nameCountry}</h3>*/}\r\n\r\n                    <p>País seleccionado: {hoveredCountry}</p>\r\n                    {cantanteAdivinar && <p>Has hecho click en: {selectedCountry}</p>}\r\n\r\n                    {/* Resultado de la dirección */}\r\n                    <div\r\n                        style={{ marginTop: \"10px\", fontSize: \"25px\", fontWeight: \"bold\" }}\r\n                    >\r\n                        {resultadoMensaje}\r\n                    </div>\r\n\r\n                    <button onClick={reiniciarJuego} style={{ marginTop: \"20px\" }}>\r\n                        Reiniciar Juego\r\n                    </button>\r\n                </div>\r\n                <div style={{\r\n                    flex: '0 0 300px',\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'flex-start'\r\n                }}>\r\n                    <svg\r\n                        width=\"800\" height=\"446\" viewBox=\"0 0 800 446\"// Ajusta según el tamaño del mapa\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <MapPaths\r\n                            handleMouseEnter={handleMouseEnter}\r\n                            handleMouseLeave={handleMouseLeave}\r\n                            handleCountryClick={handleCountryClick}\r\n                        />\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InteractiveMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}