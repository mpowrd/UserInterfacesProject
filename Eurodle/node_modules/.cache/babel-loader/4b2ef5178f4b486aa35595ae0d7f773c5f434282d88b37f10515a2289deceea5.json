{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mpord\\\\Documents\\\\3IngSoft\\\\2Cuatri\\\\IU\\\\UserInterfacesProject\\\\Eurodle\\\\src\\\\guessSong\\\\ClueDisplay.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useTranslation } from 'react-i18next'; // <-- A√±adir\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClueDisplay = ({\n  pistas\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation('guessSong'); // <-- A√±adir (namespace 'guessSong')\n\n  // Helper function to translate comparison results\n  const translateComparison = comparisonText => {\n    switch (comparisonText) {\n      case \"‚úÖ\":\n      case \"‚úîÔ∏è Correcto\":\n        // Aseg√∫rate de que coincida con lo que genera handleGuess\n        return t('clues.comparison.correct');\n      case \"‚ùå\":\n        return t('clues.comparison.incorrect');\n      case \"üîº Busca m√°s reciente\":\n        return t('clues.comparison.yearHigher');\n      case \"üîΩ Busca m√°s antiguo\":\n        return t('clues.comparison.yearLower');\n      case \"üîº Ranking m√°s alto\":\n        return t('clues.comparison.rankHigher');\n      case \"üîΩ Ranking m√°s bajo\":\n        return t('clues.comparison.rankLower');\n      default:\n        return comparisonText;\n      // Devuelve el texto original si no hay coincidencia\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clue-display\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: t('clues.title')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), pistas.length === 0 ?\n    /*#__PURE__*/\n    // L√≠nea ~9: Cambiar p\n    _jsxDEV(\"p\", {\n      children: t('clues.noClues')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"pistas-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: t('clues.headers.song')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: t('clues.headers.artist')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: t('clues.headers.country')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: t('clues.headers.year')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: t('clues.headers.rank')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: pistas.map((pista, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: pista.intento.song_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: pista.intento.year + \" ‚Äî \" + pista.intento.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this), pista.pistas.map((p, idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: translateComparison(p.acertado)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 33\n          }, this))]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(ClueDisplay, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = ClueDisplay;\nexport default ClueDisplay;\nvar _c;\n$RefreshReg$(_c, \"ClueDisplay\");","map":{"version":3,"names":["React","useTranslation","jsxDEV","_jsxDEV","ClueDisplay","pistas","_s","t","translateComparison","comparisonText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","pista","index","intento","song_name","year","country","p","idx","acertado","_c","$RefreshReg$"],"sources":["C:/Users/mpord/Documents/3IngSoft/2Cuatri/IU/UserInterfacesProject/Eurodle/src/guessSong/ClueDisplay.js"],"sourcesContent":["import React from \"react\";\r\nimport { useTranslation } from 'react-i18next'; // <-- A√±adir\r\n\r\nconst ClueDisplay = ({ pistas }) => {\r\n    const { t } = useTranslation('guessSong'); // <-- A√±adir (namespace 'guessSong')\r\n\r\n    // Helper function to translate comparison results\r\n    const translateComparison = (comparisonText) => {\r\n        switch (comparisonText) {\r\n            case \"‚úÖ\":\r\n            case \"‚úîÔ∏è Correcto\": // Aseg√∫rate de que coincida con lo que genera handleGuess\r\n                return t('clues.comparison.correct');\r\n            case \"‚ùå\":\r\n                return t('clues.comparison.incorrect');\r\n            case \"üîº Busca m√°s reciente\":\r\n                return t('clues.comparison.yearHigher');\r\n            case \"üîΩ Busca m√°s antiguo\":\r\n                return t('clues.comparison.yearLower');\r\n            case \"üîº Ranking m√°s alto\":\r\n                return t('clues.comparison.rankHigher');\r\n            case \"üîΩ Ranking m√°s bajo\":\r\n                return t('clues.comparison.rankLower');\r\n            default:\r\n                return comparisonText; // Devuelve el texto original si no hay coincidencia\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"clue-display\">\r\n            {/* L√≠nea ~6: Cambiar h2 */}\r\n            <h2>{t('clues.title')}</h2>\r\n\r\n            {pistas.length === 0 ? (\r\n                // L√≠nea ~9: Cambiar p\r\n                <p>{t('clues.noClues')}</p>\r\n            ) : (\r\n                <table className=\"pistas-table\">\r\n                    <thead>\r\n                    <tr>\r\n                        {/* L√≠neas ~14-18: Cambiar th */}\r\n                        <th>{t('clues.headers.song')}</th>\r\n                        <th>{t('clues.headers.artist')}</th>\r\n                        <th>{t('clues.headers.country')}</th>\r\n                        <th>{t('clues.headers.year')}</th>\r\n                        <th>{t('clues.headers.rank')}</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {pistas.map((pista, index) => (\r\n                        <tr key={index}>\r\n                            <td><p><strong>{pista.intento.song_name}</strong></p>\r\n                                <p>{pista.intento.year + \" ‚Äî \" + pista.intento.country}</p></td>\r\n                            {/* L√≠nea ~29: Traducir el resultado de la pista */}\r\n                            {pista.pistas.map((p, idx) => (\r\n                                <td key={idx}>{translateComparison(p.acertado)}</td>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </table>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ClueDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}