{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mpord\\\\Documents\\\\3IngSoft\\\\2Cuatri\\\\IU\\\\UserInterfacesProject\\\\Eurodle\\\\src\\\\Settings.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSettings } from './SettingsProvider'; // Importa el hook del contexto\nimport { useNavigate } from \"react-router-dom\";\nimport { useTranslation } from 'react-i18next';\nimport { useEffect, useState } from \"react\";\nimport './css/settings.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settings = () => {\n  _s();\n  const {\n    t,\n    i18n\n  } = useTranslation('settings'); // Usa el namespace específico\n  const {\n    volume,\n    daltonicMode,\n    language,\n    updateVolume,\n    updateDaltonicMode,\n    updateLanguage\n  } = useSettings(); // Usamos el hook para acceder a los valores y actualizarlos\n  const [selected_language, setLangu] = useState(language);\n  const navigate = useNavigate();\n  const handleBack = () => {\n    i18n.changeLanguage(selected_language); // Cambia el idioma solo para este componente\n    navigate(-1); // vuelve a la pantalla anterior\n  };\n  const handleLanguageChange = lang => {\n    updateLanguage(lang);\n    setLangu(lang);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: t('title')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"volume\",\n        children: [t('volume'), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"volume\",\n        name: \"volume\",\n        min: \"0\",\n        max: \"100\",\n        value: volume // Enlace con la variable de estado\n        ,\n        onChange: e => updateVolume(e.target.value) // Actualizamos la variable de estado al cambiar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-item\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"daltonicMode\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"daltonicMode\",\n          checked: daltonicMode // Enlace con la variable de estado\n          ,\n          onChange: e => updateDaltonicMode(e.target.checked) // Actualizamos la variable de estado al cambiar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), t('daltonicMode')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"language\",\n        children: [t('language'), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"language\",\n        name: \"language\",\n        value: language // Enlace con la variable de estado\n        ,\n        onChange: e => handleLanguageChange(e.target.value) // Actualizamos la variable de estado al cambiar\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"es\",\n          children: t('languages.es')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"en\",\n          children: t('languages.en')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"fr\",\n          children: t('languages.fr')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBack,\n      className: \"settings-btn-return-home\",\n      children: t('back')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Settings, \"YVy0GBNAl6ORMamy8igvMF7+p1Y=\", false, function () {\n  return [useTranslation, useSettings, useNavigate];\n});\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useSettings","useNavigate","useTranslation","useEffect","useState","jsxDEV","_jsxDEV","Settings","_s","t","i18n","volume","daltonicMode","language","updateVolume","updateDaltonicMode","updateLanguage","selected_language","setLangu","navigate","handleBack","changeLanguage","handleLanguageChange","lang","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","name","min","max","value","onChange","e","target","checked","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mpord/Documents/3IngSoft/2Cuatri/IU/UserInterfacesProject/Eurodle/src/Settings.js"],"sourcesContent":["import React from 'react';\r\nimport { useSettings } from './SettingsProvider'; // Importa el hook del contexto\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport {useEffect, useState} from \"react\";\r\n\r\nimport './css/settings.css';\r\n\r\n\r\nconst Settings = () => {\r\n    const { t, i18n } = useTranslation('settings'); // Usa el namespace específico\r\n    const { volume, daltonicMode, language, updateVolume, updateDaltonicMode, updateLanguage } = useSettings(); // Usamos el hook para acceder a los valores y actualizarlos\r\n    const [selected_language, setLangu] = useState(language)\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleBack = () => {\r\n        i18n.changeLanguage(selected_language); // Cambia el idioma solo para este componente\r\n        navigate(-1); // vuelve a la pantalla anterior\r\n    };\r\n\r\n    const handleLanguageChange = (lang) => {\r\n        updateLanguage(lang);\r\n        setLangu(lang)\r\n    };\r\n\r\n    return (\r\n        <div className=\"settings-panel\">\r\n            <h2>{t('title')}</h2>\r\n\r\n            <div className=\"settings-item\">\r\n                <label htmlFor=\"volume\">{t('volume')}:</label>\r\n                <input\r\n                    type=\"range\"\r\n                    id=\"volume\"\r\n                    name=\"volume\"\r\n                    min=\"0\"\r\n                    max=\"100\"\r\n                    value={volume} // Enlace con la variable de estado\r\n                    onChange={(e) => updateVolume(e.target.value)} // Actualizamos la variable de estado al cambiar\r\n                />\r\n                {/*<span>{volume}</span> /!* Muestra el valor del volumen *!/*/}\r\n            </div>\r\n\r\n            <div className=\"settings-item\">\r\n                <label htmlFor=\"daltonicMode\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        id=\"daltonicMode\"\r\n                        checked={daltonicMode} // Enlace con la variable de estado\r\n                        onChange={(e) => updateDaltonicMode(e.target.checked)} // Actualizamos la variable de estado al cambiar\r\n                    />\r\n                    {t('daltonicMode')}\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"settings-item\">\r\n                <label htmlFor=\"language\">{t('language')}:</label>\r\n                <select\r\n                    id=\"language\"\r\n                    name=\"language\"\r\n                    value={language} // Enlace con la variable de estado\r\n                    onChange={(e) => handleLanguageChange(e.target.value)} // Actualizamos la variable de estado al cambiar\r\n                >\r\n                    <option value=\"es\">{t('languages.es')}</option>\r\n                    <option value=\"en\">{t('languages.en')}</option>\r\n                    <option value=\"fr\">{t('languages.fr')}</option>\r\n                </select>\r\n            </div>\r\n\r\n            <button onClick={handleBack} className=\"settings-btn-return-home\">{t('back')}</button>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}