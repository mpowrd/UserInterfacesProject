{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mpord\\\\Documents\\\\3IngSoft\\\\2Cuatri\\\\IU\\\\UserInterfacesProject\\\\Eurodle\\\\src\\\\OrderSongs\\\\OrderSongsGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Papa from \"papaparse\";\nimport \"./OrderSongsGame.css\";\nimport Tarjetas from \"./Tarjetas\";\nimport Huecos from \"./Huecos\";\nimport Mensaje from \"./Mensaje\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderSongsGame = () => {\n  _s();\n  const [canciones, setCanciones] = useState([]);\n  const [ordenCorrecto, setOrdenCorrecto] = useState([]);\n  const [ordenUsuario, setOrdenUsuario] = useState([]);\n  const [feedback, setFeedback] = useState(null); // Initialize feedback as null\n  const [year, setYear] = useState(null);\n  const [vidas, setVidas] = useState(3);\n  const [mensaje, setMensaje] = useState(null);\n  useEffect(() => {\n    Papa.parse(\"/canciones.csv\", {\n      header: true,\n      download: true,\n      complete: results => {\n        const validSongs = results.data.filter(c => c.song_name && c.final_place && c.year && c.song_name.trim() !== \"\" && c.final_place.trim() !== \"\" && c.year.trim() !== \"\");\n        const years = [...new Set(validSongs.map(c => c.year))];\n        const randomYear = years[Math.floor(Math.random() * years.length)];\n        setYear(randomYear);\n        const topSongs = validSongs.filter(c => c.year === randomYear).sort((a, b) => parseInt(a.final_place) - parseInt(b.final_place)).slice(0, 5);\n        setOrdenCorrecto(topSongs.map(c => c.song_name)); // Set correct order before shuffling\n\n        // Shuffle the order of the cards\n        const shuffledSongs = [...topSongs].sort(() => Math.random() - 0.5);\n        setCanciones(shuffledSongs);\n        setOrdenUsuario(Array(5).fill(null));\n      },\n      error: error => console.error(\"Error loading CSV:\", error)\n    });\n  }, []);\n  const handleDragStart = (e, songName, index = null) => {\n    e.dataTransfer.setData(\"text/plain\", songName);\n    if (index !== null) {\n      const newOrdenUsuario = [...ordenUsuario];\n      newOrdenUsuario[index] = null;\n      setOrdenUsuario(newOrdenUsuario);\n      setFeedback(null); // Reset feedback when modifying the order\n    }\n  };\n  const handleDrop = (e, index) => {\n    e.preventDefault();\n    const songName = e.dataTransfer.getData(\"text/plain\");\n    const newOrdenUsuario = [...ordenUsuario];\n    newOrdenUsuario[index] = songName;\n    setOrdenUsuario(newOrdenUsuario);\n    setFeedback(null); // Reset feedback when modifying the order\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const handleCheck = () => {\n    if (vidas <= 0 || mensaje) return;\n    const newFeedback = ordenUsuario.map((song, index) => song === ordenCorrecto[index] ? \"✔️\" : \"❌\");\n    setFeedback(newFeedback); // Set feedback after checking\n\n    if (ordenUsuario.every((song, index) => song === ordenCorrecto[index])) {\n      setMensaje(\"¡Felicidades! Has ordenado las canciones correctamente 🎉\");\n    } else {\n      setVidas(vidas - 1);\n      if (vidas - 1 === 0) {\n        setMensaje(`Has perdido. El orden correcto era: ${ordenCorrecto.join(\", \")}`);\n      }\n    }\n  };\n  const reiniciarJuego = () => {\n    window.location.reload(); // Reload the webpage\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"order-songs-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ordena las Canciones\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), year && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"A\\xF1o seleccionado: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: year\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Arrastra las canciones a los huecos en el orden correcto.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Vidas restantes: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: vidas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Mensaje, {\n      mensaje: mensaje\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tarjetas, {\n      canciones: canciones,\n      ordenUsuario: ordenUsuario,\n      handleDragStart: handleDragStart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Huecos, {\n      ordenUsuario: ordenUsuario,\n      feedback: feedback || [] // Show feedback only after checking or game ends\n      ,\n      handleDrop: handleDrop,\n      handleDragOver: handleDragOver,\n      handleDragStart: handleDragStart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCheck,\n      className: \"comprobar-btn\",\n      children: \"Comprobar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), mensaje && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: reiniciarJuego,\n      className: \"reiniciar-btn\",\n      children: \"Reiniciar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(OrderSongsGame, \"ntxeI3SE9yuE9ogWiXP5Xjrcgl8=\");\n_c = OrderSongsGame;\nexport default OrderSongsGame;\nvar _c;\n$RefreshReg$(_c, \"OrderSongsGame\");","map":{"version":3,"names":["React","useState","useEffect","Papa","Tarjetas","Huecos","Mensaje","jsxDEV","_jsxDEV","OrderSongsGame","_s","canciones","setCanciones","ordenCorrecto","setOrdenCorrecto","ordenUsuario","setOrdenUsuario","feedback","setFeedback","year","setYear","vidas","setVidas","mensaje","setMensaje","parse","header","download","complete","results","validSongs","data","filter","c","song_name","final_place","trim","years","Set","map","randomYear","Math","floor","random","length","topSongs","sort","a","b","parseInt","slice","shuffledSongs","Array","fill","error","console","handleDragStart","e","songName","index","dataTransfer","setData","newOrdenUsuario","handleDrop","preventDefault","getData","handleDragOver","handleCheck","newFeedback","song","every","join","reiniciarJuego","window","location","reload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mpord/Documents/3IngSoft/2Cuatri/IU/UserInterfacesProject/Eurodle/src/OrderSongs/OrderSongsGame.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Papa from \"papaparse\";\r\nimport \"./OrderSongsGame.css\";\r\nimport Tarjetas from \"./Tarjetas\";\r\nimport Huecos from \"./Huecos\";\r\nimport Mensaje from \"./Mensaje\";\r\n\r\nconst OrderSongsGame = () => {\r\n    const [canciones, setCanciones] = useState([]);\r\n    const [ordenCorrecto, setOrdenCorrecto] = useState([]);\r\n    const [ordenUsuario, setOrdenUsuario] = useState([]);\r\n    const [feedback, setFeedback] = useState(null); // Initialize feedback as null\r\n    const [year, setYear] = useState(null);\r\n    const [vidas, setVidas] = useState(3);\r\n    const [mensaje, setMensaje] = useState(null);\r\n\r\n    useEffect(() => {\r\n        Papa.parse(\"/canciones.csv\", {\r\n            header: true,\r\n            download: true,\r\n            complete: (results) => {\r\n                const validSongs = results.data.filter(c =>\r\n                    c.song_name && c.final_place && c.year &&\r\n                    c.song_name.trim() !== \"\" &&\r\n                    c.final_place.trim() !== \"\" &&\r\n                    c.year.trim() !== \"\"\r\n                );\r\n\r\n                const years = [...new Set(validSongs.map(c => c.year))];\r\n                const randomYear = years[Math.floor(Math.random() * years.length)];\r\n                setYear(randomYear);\r\n\r\n                const topSongs = validSongs\r\n                    .filter(c => c.year === randomYear)\r\n                    .sort((a, b) => parseInt(a.final_place) - parseInt(b.final_place))\r\n                    .slice(0, 5);\r\n\r\n                setOrdenCorrecto(topSongs.map(c => c.song_name)); // Set correct order before shuffling\r\n\r\n                // Shuffle the order of the cards\r\n                const shuffledSongs = [...topSongs].sort(() => Math.random() - 0.5);\r\n\r\n                setCanciones(shuffledSongs);\r\n                setOrdenUsuario(Array(5).fill(null));\r\n            },\r\n            error: (error) => console.error(\"Error loading CSV:\", error),\r\n        });\r\n    }, []);\r\n\r\n    const handleDragStart = (e, songName, index = null) => {\r\n        e.dataTransfer.setData(\"text/plain\", songName);\r\n        if (index !== null) {\r\n            const newOrdenUsuario = [...ordenUsuario];\r\n            newOrdenUsuario[index] = null;\r\n            setOrdenUsuario(newOrdenUsuario);\r\n            setFeedback(null); // Reset feedback when modifying the order\r\n        }\r\n    };\r\n\r\n    const handleDrop = (e, index) => {\r\n        e.preventDefault();\r\n        const songName = e.dataTransfer.getData(\"text/plain\");\r\n        const newOrdenUsuario = [...ordenUsuario];\r\n        newOrdenUsuario[index] = songName;\r\n        setOrdenUsuario(newOrdenUsuario);\r\n        setFeedback(null); // Reset feedback when modifying the order\r\n    };\r\n\r\n    const handleDragOver = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    const handleCheck = () => {\r\n        if (vidas <= 0 || mensaje) return;\r\n\r\n        const newFeedback = ordenUsuario.map((song, index) =>\r\n            song === ordenCorrecto[index] ? \"✔️\" : \"❌\"\r\n        );\r\n        setFeedback(newFeedback); // Set feedback after checking\r\n\r\n        if (ordenUsuario.every((song, index) => song === ordenCorrecto[index])) {\r\n            setMensaje(\"¡Felicidades! Has ordenado las canciones correctamente 🎉\");\r\n        } else {\r\n            setVidas(vidas - 1);\r\n            if (vidas - 1 === 0) {\r\n                setMensaje(`Has perdido. El orden correcto era: ${ordenCorrecto.join(\", \")}`);\r\n            }\r\n        }\r\n    };\r\n\r\n    const reiniciarJuego = () => {\r\n        window.location.reload(); // Reload the webpage\r\n    };\r\n\r\n    return (\r\n        <div className=\"order-songs-game\">\r\n            <h1>Ordena las Canciones</h1>\r\n            {year && <p>Año seleccionado: <strong>{year}</strong></p>}\r\n            <p>Arrastra las canciones a los huecos en el orden correcto.</p>\r\n            <p>Vidas restantes: <strong>{vidas}</strong></p>\r\n\r\n            <Mensaje mensaje={mensaje} />\r\n            <Tarjetas canciones={canciones} ordenUsuario={ordenUsuario} handleDragStart={handleDragStart} />\r\n            <Huecos\r\n                ordenUsuario={ordenUsuario}\r\n                feedback={feedback || []} // Show feedback only after checking or game ends\r\n                handleDrop={handleDrop}\r\n                handleDragOver={handleDragOver}\r\n                handleDragStart={handleDragStart}\r\n            />\r\n\r\n            <button onClick={handleCheck} className=\"comprobar-btn\">Comprobar</button>\r\n            {mensaje && <button onClick={reiniciarJuego} className=\"reiniciar-btn\">Reiniciar</button>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderSongsGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}