{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mpord\\\\Documents\\\\3IngSoft\\\\2Cuatri\\\\IU\\\\UserInterfacesProject\\\\Eurodle\\\\src\\\\guessSong\\\\ClueDisplay.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClueDisplay = ({\n  pistas\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clue-display\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pistas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), pistas.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Sin pistas todav\\xEDa.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"pistas-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Canci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Cantante\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Pa\\xEDs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"A\\xF1o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Ranking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: pistas.map((pista, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: pista.intento.song_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: pista.intento.year + \" — \" + pista.intento.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }, this), pista.pistas.map((p, idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: p.acertado\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 33\n          }, this))]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n_c = ClueDisplay;\nexport default ClueDisplay;\nvar _c;\n$RefreshReg$(_c, \"ClueDisplay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ClueDisplay","pistas","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","pista","index","intento","song_name","year","country","p","idx","acertado","_c","$RefreshReg$"],"sources":["C:/Users/mpord/Documents/3IngSoft/2Cuatri/IU/UserInterfacesProject/Eurodle/src/guessSong/ClueDisplay.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst ClueDisplay = ({ pistas }) => {\r\n    return (\r\n        <div className=\"clue-display\">\r\n            <h2>Pistas</h2>\r\n\r\n            {pistas.length === 0 ? (\r\n                <p>Sin pistas todavía.</p>\r\n            ) : (\r\n                <table className=\"pistas-table\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Canción</th>\r\n                        <th>Cantante</th>\r\n                        <th>País</th>\r\n                        <th>Año</th>\r\n                        <th>Ranking</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {pistas.map((pista, index) => (\r\n                        <tr key={index}>\r\n                            <td><p><strong>{pista.intento.song_name}</strong></p>\r\n                            <p>{pista.intento.year + \" — \" + pista.intento.country}</p></td>\r\n                            {pista.pistas.map((p, idx) => (\r\n                                <td key={idx}>{p.acertado}</td>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </table>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ClueDisplay;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAChC,oBACIF,OAAA;IAAKG,SAAS,EAAC,cAAc;IAAAC,QAAA,gBACzBJ,OAAA;MAAAI,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEdN,MAAM,CAACO,MAAM,KAAK,CAAC,gBAChBT,OAAA;MAAAI,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE1BR,OAAA;MAAOG,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BJ,OAAA;QAAAI,QAAA,eACAJ,OAAA;UAAAI,QAAA,gBACIJ,OAAA;YAAAI,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChBR,OAAA;YAAAI,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjBR,OAAA;YAAAI,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbR,OAAA;YAAAI,QAAA,EAAI;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACZR,OAAA;YAAAI,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACRR,OAAA;QAAAI,QAAA,EACCF,MAAM,CAACQ,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACrBZ,OAAA;UAAAI,QAAA,gBACIJ,OAAA;YAAAI,QAAA,gBAAIJ,OAAA;cAAAI,QAAA,eAAGJ,OAAA;gBAAAI,QAAA,EAASO,KAAK,CAACE,OAAO,CAACC;cAAS;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACrDR,OAAA;cAAAI,QAAA,EAAIO,KAAK,CAACE,OAAO,CAACE,IAAI,GAAG,KAAK,GAAGJ,KAAK,CAACE,OAAO,CAACG;YAAO;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAC/DG,KAAK,CAACT,MAAM,CAACQ,GAAG,CAAC,CAACO,CAAC,EAAEC,GAAG,kBACrBlB,OAAA;YAAAI,QAAA,EAAea,CAAC,CAACE;UAAQ,GAAhBD,GAAG;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAkB,CACjC,CAAC;QAAA,GALGI,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMV,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACV;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACY,EAAA,GAjCInB,WAAW;AAmCjB,eAAeA,WAAW;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}