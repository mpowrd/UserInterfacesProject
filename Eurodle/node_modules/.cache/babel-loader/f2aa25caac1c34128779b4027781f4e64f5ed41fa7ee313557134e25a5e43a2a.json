{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mpord\\\\Documents\\\\3IngSoft\\\\2Cuatri\\\\IU\\\\UserInterfacesProject\\\\Eurodle\\\\src\\\\guessSong\\\\YouTubePlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YouTubePlayer = ({\n  videoId,\n  startTime = 30\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  const playerRef = useRef(null);\n  const playerInitializedRef = useRef(false);\n  const completedRef = useRef(false);\n\n  // Keep track of all timers to clear them if needed\n  const timersRef = useRef([]);\n\n  // Create a unique container ID\n  const containerId = `youtube-container-${videoId}-${startTime}`;\n  const [height, setHeight] = useState(\"315px\");\n  useEffect(() => {\n    // Ensure the container exists in the DOM\n    const container = document.getElementById(containerId);\n    if (!container) return;\n\n    // Load the YouTube API if it's not already loaded\n    if (!window.YT) {\n      const tag = document.createElement('script');\n      tag.src = 'https://www.youtube.com/iframe_api';\n      const firstScriptTag = document.getElementsByTagName('script')[0];\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n    }\n\n    // Create an overlay for fading\n    const overlay = document.createElement('div');\n    overlay.style.position = 'absolute';\n    overlay.style.top = '0';\n    overlay.style.left = '0';\n    overlay.style.width = '100%';\n    overlay.style.height = '100%';\n    overlay.style.backgroundColor = 'black';\n    overlay.style.zIndex = '10';\n    overlay.style.transition = 'opacity 1s ease';\n    overlay.style.opacity = '1';\n    container.appendChild(overlay);\n\n    // Create a placeholder for YouTube iframe\n    const playerPlaceholder = document.createElement('div');\n    playerPlaceholder.id = `youtube-player-${videoId}-${startTime}`;\n    playerPlaceholder.style.width = '100%';\n    playerPlaceholder.style.height = '100%';\n    container.appendChild(playerPlaceholder);\n\n    // Function to initialize YouTube player\n    const initPlayer = () => {\n      if (playerInitializedRef.current || completedRef.current) return;\n      playerRef.current = new window.YT.Player(`youtube-player-${videoId}-${startTime}`, {\n        videoId: videoId,\n        playerVars: {\n          start: startTime,\n          autoplay: 1,\n          controls: 0,\n          showinfo: 0,\n          modestbranding: 1,\n          rel: 0,\n          disablekb: 1,\n          mute: 1 // Start muted\n        },\n        events: {\n          'onReady': onPlayerReady\n        }\n      });\n      playerInitializedRef.current = true;\n    };\n\n    // Handler for when player is ready\n    function onPlayerReady(event) {\n      if (completedRef.current) return;\n\n      // Wait before fading in the video\n      const fadeInTimer = setTimeout(() => {\n        overlay.style.opacity = '0';\n\n        // Unmute and fade in audio\n        if (playerRef.current) {\n          playerRef.current.unMute();\n          playerRef.current.setVolume(0);\n          let volume = 0;\n          const fadeInInterval = setInterval(() => {\n            if (completedRef.current) {\n              clearInterval(fadeInInterval);\n              return;\n            }\n            volume += 10;\n            if (volume <= 100 && playerRef.current) {\n              playerRef.current.setVolume(volume);\n            } else {\n              clearInterval(fadeInInterval);\n            }\n          }, 100);\n          timersRef.current.push(fadeInInterval);\n        }\n\n        // Play for specified duration then fade out\n        const fadeOutTimer = setTimeout(() => {\n          if (completedRef.current) return;\n\n          // Fade out audio\n          let volume = 100;\n          const fadeOutInterval = setInterval(() => {\n            if (completedRef.current) {\n              clearInterval(fadeOutInterval);\n              return;\n            }\n            volume -= 10;\n            if (volume >= 0 && playerRef.current) {\n              playerRef.current.setVolume(volume);\n            } else {\n              clearInterval(fadeOutInterval);\n            }\n          }, 100);\n          timersRef.current.push(fadeOutInterval);\n\n          // Fade in the black overlay\n          overlay.style.opacity = '1';\n\n          // After fade out, stop the video and show completion message\n          const completeTimer = setTimeout(() => {\n            if (completedRef.current) return;\n            completedRef.current = true;\n            if (playerRef.current) {\n              playerRef.current.pauseVideo();\n            }\n\n            // Show completion message\n            container.innerHTML = '';\n            const completionMsg = document.createElement('div');\n            completionMsg.textContent = \"Video hint completed âœ“\";\n            completionMsg.style.textAlign = 'center';\n            setHeight(\"40px\");\n            container.appendChild(completionMsg);\n          }, 1000);\n          timersRef.current.push(completeTimer);\n        }, 10000); // 10 seconds playback\n        timersRef.current.push(fadeOutTimer);\n      }, 5000); // 5 seconds initial delay\n      timersRef.current.push(fadeInTimer);\n    }\n\n    // Initialize player when API is ready\n    if (window.YT && window.YT.Player) {\n      initPlayer();\n    } else {\n      // Set up global callback for when API loads\n      const originalCallback = window.onYouTubeIframeAPIReady;\n      window.onYouTubeIframeAPIReady = () => {\n        if (originalCallback) originalCallback();\n        initPlayer();\n      };\n    }\n\n    // Cleanup function\n    return () => {\n      // Clear all timers\n      timersRef.current.forEach(timerId => clearTimeout(timerId));\n      timersRef.current = [];\n\n      // Mark as completed to prevent further operations\n      completedRef.current = true;\n\n      // Important: Don't destroy the player, just pause it\n      if (playerRef.current && playerRef.current.pauseVideo) {\n        playerRef.current.pauseVideo();\n      }\n    };\n  }, [videoId, startTime, containerId]);\n\n  // Render a simple container that won't be modified by React after mounting\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: containerId,\n    ref: containerRef,\n    style: {\n      position: 'relative',\n      width: '560px',\n      height: height,\n      pointerEvents: 'none'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 9\n  }, this);\n};\n_s(YouTubePlayer, \"FRkPuQ5k2Q/egH74sM5B4kOwSfQ=\");\n_c = YouTubePlayer;\nexport default YouTubePlayer;\nvar _c;\n$RefreshReg$(_c, \"YouTubePlayer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","YouTubePlayer","videoId","startTime","_s","containerRef","playerRef","playerInitializedRef","completedRef","timersRef","containerId","height","setHeight","container","document","getElementById","window","YT","tag","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","overlay","style","position","top","left","width","backgroundColor","zIndex","transition","opacity","appendChild","playerPlaceholder","id","initPlayer","current","Player","playerVars","start","autoplay","controls","showinfo","modestbranding","rel","disablekb","mute","events","onPlayerReady","event","fadeInTimer","setTimeout","unMute","setVolume","volume","fadeInInterval","setInterval","clearInterval","push","fadeOutTimer","fadeOutInterval","completeTimer","pauseVideo","innerHTML","completionMsg","textContent","textAlign","originalCallback","onYouTubeIframeAPIReady","forEach","timerId","clearTimeout","ref","pointerEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mpord/Documents/3IngSoft/2Cuatri/IU/UserInterfacesProject/Eurodle/src/guessSong/YouTubePlayer.js"],"sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\r\n\r\nconst YouTubePlayer = ({ videoId, startTime = 30 }) => {\r\n    const containerRef = useRef(null);\r\n    const playerRef = useRef(null);\r\n    const playerInitializedRef = useRef(false);\r\n    const completedRef = useRef(false);\r\n\r\n    // Keep track of all timers to clear them if needed\r\n    const timersRef = useRef([]);\r\n\r\n    // Create a unique container ID\r\n    const containerId = `youtube-container-${videoId}-${startTime}`;\r\n\r\n    const [height, setHeight] = useState(\"315px\")\r\n\r\n    useEffect(() => {\r\n        // Ensure the container exists in the DOM\r\n        const container = document.getElementById(containerId);\r\n        if (!container) return;\r\n\r\n        // Load the YouTube API if it's not already loaded\r\n        if (!window.YT) {\r\n            const tag = document.createElement('script');\r\n            tag.src = 'https://www.youtube.com/iframe_api';\r\n            const firstScriptTag = document.getElementsByTagName('script')[0];\r\n            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n        }\r\n\r\n        // Create an overlay for fading\r\n        const overlay = document.createElement('div');\r\n        overlay.style.position = 'absolute';\r\n        overlay.style.top = '0';\r\n        overlay.style.left = '0';\r\n        overlay.style.width = '100%';\r\n        overlay.style.height = '100%';\r\n        overlay.style.backgroundColor = 'black';\r\n        overlay.style.zIndex = '10';\r\n        overlay.style.transition = 'opacity 1s ease';\r\n        overlay.style.opacity = '1';\r\n        container.appendChild(overlay);\r\n\r\n        // Create a placeholder for YouTube iframe\r\n        const playerPlaceholder = document.createElement('div');\r\n        playerPlaceholder.id = `youtube-player-${videoId}-${startTime}`;\r\n        playerPlaceholder.style.width = '100%';\r\n        playerPlaceholder.style.height = '100%';\r\n        container.appendChild(playerPlaceholder);\r\n\r\n        // Function to initialize YouTube player\r\n        const initPlayer = () => {\r\n            if (playerInitializedRef.current || completedRef.current) return;\r\n\r\n            playerRef.current = new window.YT.Player(`youtube-player-${videoId}-${startTime}`, {\r\n                videoId: videoId,\r\n                playerVars: {\r\n                    start: startTime,\r\n                    autoplay: 1,\r\n                    controls: 0,\r\n                    showinfo: 0,\r\n                    modestbranding: 1,\r\n                    rel: 0,\r\n                    disablekb: 1,\r\n                    mute: 1 // Start muted\r\n                },\r\n                events: {\r\n                    'onReady': onPlayerReady\r\n                }\r\n            });\r\n\r\n            playerInitializedRef.current = true;\r\n        };\r\n\r\n        // Handler for when player is ready\r\n        function onPlayerReady(event) {\r\n            if (completedRef.current) return;\r\n\r\n            // Wait before fading in the video\r\n            const fadeInTimer = setTimeout(() => {\r\n                overlay.style.opacity = '0';\r\n\r\n                // Unmute and fade in audio\r\n                if (playerRef.current) {\r\n                    playerRef.current.unMute();\r\n                    playerRef.current.setVolume(0);\r\n\r\n                    let volume = 0;\r\n                    const fadeInInterval = setInterval(() => {\r\n                        if (completedRef.current) {\r\n                            clearInterval(fadeInInterval);\r\n                            return;\r\n                        }\r\n\r\n                        volume += 10;\r\n                        if (volume <= 100 && playerRef.current) {\r\n                            playerRef.current.setVolume(volume);\r\n                        } else {\r\n                            clearInterval(fadeInInterval);\r\n                        }\r\n                    }, 100);\r\n                    timersRef.current.push(fadeInInterval);\r\n                }\r\n\r\n                // Play for specified duration then fade out\r\n                const fadeOutTimer = setTimeout(() => {\r\n                    if (completedRef.current) return;\r\n\r\n                    // Fade out audio\r\n                    let volume = 100;\r\n                    const fadeOutInterval = setInterval(() => {\r\n                        if (completedRef.current) {\r\n                            clearInterval(fadeOutInterval);\r\n                            return;\r\n                        }\r\n\r\n                        volume -= 10;\r\n                        if (volume >= 0 && playerRef.current) {\r\n                            playerRef.current.setVolume(volume);\r\n                        } else {\r\n                            clearInterval(fadeOutInterval);\r\n                        }\r\n                    }, 100);\r\n                    timersRef.current.push(fadeOutInterval);\r\n\r\n                    // Fade in the black overlay\r\n                    overlay.style.opacity = '1';\r\n\r\n                    // After fade out, stop the video and show completion message\r\n                    const completeTimer = setTimeout(() => {\r\n                        if (completedRef.current) return;\r\n                        completedRef.current = true;\r\n\r\n                        if (playerRef.current) {\r\n                            playerRef.current.pauseVideo();\r\n                        }\r\n\r\n                        // Show completion message\r\n                        container.innerHTML = '';\r\n                        const completionMsg = document.createElement('div');\r\n                        completionMsg.textContent = \"Video hint completed âœ“\";\r\n                        completionMsg.style.textAlign = 'center';\r\n                        setHeight(\"40px\")\r\n                        container.appendChild(completionMsg);\r\n\r\n                    }, 1000);\r\n                    timersRef.current.push(completeTimer);\r\n\r\n                }, 10000); // 10 seconds playback\r\n                timersRef.current.push(fadeOutTimer);\r\n\r\n            }, 5000); // 5 seconds initial delay\r\n            timersRef.current.push(fadeInTimer);\r\n        }\r\n\r\n        // Initialize player when API is ready\r\n        if (window.YT && window.YT.Player) {\r\n            initPlayer();\r\n        } else {\r\n            // Set up global callback for when API loads\r\n            const originalCallback = window.onYouTubeIframeAPIReady;\r\n            window.onYouTubeIframeAPIReady = () => {\r\n                if (originalCallback) originalCallback();\r\n                initPlayer();\r\n            };\r\n        }\r\n\r\n        // Cleanup function\r\n        return () => {\r\n            // Clear all timers\r\n            timersRef.current.forEach(timerId => clearTimeout(timerId));\r\n            timersRef.current = [];\r\n\r\n            // Mark as completed to prevent further operations\r\n            completedRef.current = true;\r\n\r\n            // Important: Don't destroy the player, just pause it\r\n            if (playerRef.current && playerRef.current.pauseVideo) {\r\n                playerRef.current.pauseVideo();\r\n            }\r\n        };\r\n    }, [videoId, startTime, containerId]);\r\n\r\n    // Render a simple container that won't be modified by React after mounting\r\n    return (\r\n        <div\r\n            id={containerId}\r\n            ref={containerRef}\r\n            style={{\r\n                position: 'relative',\r\n                width: '560px',\r\n                height: height,\r\n                pointerEvents: 'none'\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default YouTubePlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}