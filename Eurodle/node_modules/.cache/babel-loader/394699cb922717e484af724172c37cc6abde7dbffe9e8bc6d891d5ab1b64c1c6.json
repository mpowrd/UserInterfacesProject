{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mpord\\\\Documents\\\\3IngSoft\\\\2Cuatri\\\\IU\\\\UserInterfacesProject\\\\Eurodle\\\\src\\\\SettingsProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\n\n// Crear el contexto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SettingsContext = /*#__PURE__*/createContext();\n\n// Proveedor del contexto\nexport const SettingsProvider = ({\n  children\n}) => {\n  _s();\n  const [volume, setVolume] = useState(localStorage.getItem('volume') || 50); // Almacenamos en localStorage\n  const [daltonicMode, setDaltonicMode] = useState(localStorage.getItem('daltonicMode') === 'true' || false);\n  const [language, setLanguage] = useState(localStorage.getItem('language') || 'es');\n\n  // Guardar los valores en localStorage al cambiar\n  const updateVolume = value => {\n    setVolume(value);\n    localStorage.setItem('volume', value); // Guardar en localStorage\n  };\n  const updateDaltonicMode = value => {\n    setDaltonicMode(value);\n    localStorage.setItem('daltonicMode', value); // Guardar en localStorage\n  };\n  const updateLanguage = value => {\n    setLanguage(value);\n    localStorage.setItem('language', value); // Guardar en localStorage\n  };\n  return /*#__PURE__*/_jsxDEV(SettingsContext.Provider, {\n    value: {\n      volume,\n      daltonicMode,\n      language,\n      updateVolume,\n      updateDaltonicMode,\n      updateLanguage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n// Hook para usar el contexto en cualquier componente\n_s(SettingsProvider, \"BwvXM0FE3l44uSgyCLv3tquZ844=\");\n_c = SettingsProvider;\nexport const useSettings = () => {\n  _s2();\n  return useContext(SettingsContext);\n};\n_s2(useSettings, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"SettingsProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","SettingsContext","SettingsProvider","children","_s","volume","setVolume","localStorage","getItem","daltonicMode","setDaltonicMode","language","setLanguage","updateVolume","value","setItem","updateDaltonicMode","updateLanguage","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSettings","_s2","$RefreshReg$"],"sources":["C:/Users/mpord/Documents/3IngSoft/2Cuatri/IU/UserInterfacesProject/Eurodle/src/SettingsProvider.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\n// Crear el contexto\r\nconst SettingsContext = createContext();\r\n\r\n// Proveedor del contexto\r\nexport const SettingsProvider = ({ children }) => {\r\n    const [volume, setVolume] = useState(localStorage.getItem('volume') || 50); // Almacenamos en localStorage\r\n    const [daltonicMode, setDaltonicMode] = useState(localStorage.getItem('daltonicMode') === 'true' || false);\r\n    const [language, setLanguage] = useState(localStorage.getItem('language') || 'es');\r\n\r\n    // Guardar los valores en localStorage al cambiar\r\n    const updateVolume = (value) => {\r\n        setVolume(value);\r\n        localStorage.setItem('volume', value); // Guardar en localStorage\r\n    };\r\n\r\n    const updateDaltonicMode = (value) => {\r\n        setDaltonicMode(value);\r\n        localStorage.setItem('daltonicMode', value); // Guardar en localStorage\r\n    };\r\n\r\n    const updateLanguage = (value) => {\r\n        setLanguage(value);\r\n        localStorage.setItem('language', value); // Guardar en localStorage\r\n    };\r\n\r\n    return (\r\n        <SettingsContext.Provider value={{ volume, daltonicMode, language, updateVolume, updateDaltonicMode, updateLanguage }}>\r\n            {children}\r\n        </SettingsContext.Provider>\r\n    );\r\n};\r\n\r\n// Hook para usar el contexto en cualquier componente\r\nexport const useSettings = () => useContext(SettingsContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,gBAAGL,aAAa,CAAC,CAAC;;AAEvC;AACA,OAAO,MAAMM,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAACU,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;EAC5E,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAACU,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,KAAK,MAAM,IAAI,KAAK,CAAC;EAC1G,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAACU,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC;;EAElF;EACA,MAAMK,YAAY,GAAIC,KAAK,IAAK;IAC5BR,SAAS,CAACQ,KAAK,CAAC;IAChBP,YAAY,CAACQ,OAAO,CAAC,QAAQ,EAAED,KAAK,CAAC,CAAC,CAAC;EAC3C,CAAC;EAED,MAAME,kBAAkB,GAAIF,KAAK,IAAK;IAClCJ,eAAe,CAACI,KAAK,CAAC;IACtBP,YAAY,CAACQ,OAAO,CAAC,cAAc,EAAED,KAAK,CAAC,CAAC,CAAC;EACjD,CAAC;EAED,MAAMG,cAAc,GAAIH,KAAK,IAAK;IAC9BF,WAAW,CAACE,KAAK,CAAC;IAClBP,YAAY,CAACQ,OAAO,CAAC,UAAU,EAAED,KAAK,CAAC,CAAC,CAAC;EAC7C,CAAC;EAED,oBACId,OAAA,CAACC,eAAe,CAACiB,QAAQ;IAACJ,KAAK,EAAE;MAAET,MAAM;MAAEI,YAAY;MAAEE,QAAQ;MAAEE,YAAY;MAAEG,kBAAkB;MAAEC;IAAe,CAAE;IAAAd,QAAA,EACjHA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAEnC,CAAC;;AAED;AAAAlB,EAAA,CA5BaF,gBAAgB;AAAAqB,EAAA,GAAhBrB,gBAAgB;AA6B7B,OAAO,MAAMsB,WAAW,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM3B,UAAU,CAACG,eAAe,CAAC;AAAA;AAACwB,GAAA,CAAhDD,WAAW;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}